/*--- Even Fibonacci numbers ---*/

// Prompt
/*---
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
---*/

// Imperative
const sumEvenFib = () => {
	let n = 1;
	let sum = 0;
	while (sum < 4000000) {
		let curr = fib(n);
		if (curr % 2 === 0) {
			sum += curr;
		}
		n++;
	}
	return sum;
};

const fib = n => {
	if (n <= 1) return 1;
	return fib(n - 2) + fib(n - 1);
};

// functional
const sumFibWithFactorOf = (factor, limit) => {
	let n = 1;
	let sum = 0;
	while (sum < limit) {
		let curr = fib(n);
		if (isDivisibleBy(curr, factor)) {
			sum += curr;
		}
		n++;
	}
	return sum;
};

const isDivisibleBy = (num, divisor) => {
	return num % divisor === 0;
};
